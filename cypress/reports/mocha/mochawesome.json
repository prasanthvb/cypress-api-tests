{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-09-18T08:01:18.820Z",
    "end": "2021-09-18T08:01:21.328Z",
    "duration": 2508,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a217b11e-51fe-469c-9b27-a3abdd2ae078",
      "title": "",
      "fullFile": "cypress/integration/ApiTesting/contact_api_testcases.spec.js",
      "file": "cypress/integration/ApiTesting/contact_api_testcases.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1ed7a56e-f0a6-48fe-934f-4a0e2ca52852",
          "title": "Create a Contact and verify the Contact data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create the user using POST method",
              "fullTitle": "Create a Contact and verify the Contact data Create the user using POST method",
              "timedOut": null,
              "duration": 1362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var endpoint = '/users';\nemailValue = \"\".concat((0, _Utility.randomStringValue)()).concat(userdetails.email);\nvar requestbody = {\n  \"firstName\": userdetails.firstName,\n  \"lastName\": userdetails.lastName,\n  \"email\": emailValue,\n  \"password\": userdetails.password\n};\ncy.request({\n  method: 'POST',\n  url: endpoint,\n  body: requestbody\n}).then(function (response) {\n  createNewUserResponse = JSON.parse(JSON.stringify(response));\n  expect(createNewUserResponse.status).to.eq(Cypress.env('validStatusCode1'));\n  access_token = createNewUserResponse.body.token;\n});",
              "err": {},
              "uuid": "e84239f5-2978-4ba6-9ab2-90903b17f27b",
              "parentUUID": "1ed7a56e-f0a6-48fe-934f-4a0e2ca52852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create the contact using POST method",
              "fullTitle": "Create a Contact and verify the Contact data Create the contact using POST method",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var endpoint = '/contacts';\ncy.request({\n  method: 'POST',\n  url: endpoint,\n  headers: {\n    'Authorization': 'Bearer ' + access_token\n  },\n  body: contactdetails.contactBody\n}).then(function (response) {\n  createNewContactResponse = JSON.parse(JSON.stringify(response));\n  expect(createNewContactResponse.status).to.eq(Cypress.env('validStatusCode1'));\n  contactID = createNewContactResponse.body._id;\n});",
              "err": {},
              "uuid": "0aa44253-7487-4a32-a4f4-d0017ca15640",
              "parentUUID": "1ed7a56e-f0a6-48fe-934f-4a0e2ca52852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update the contact details and verify the changes Using PUT method",
              "fullTitle": "Create a Contact and verify the Contact data Update the contact details and verify the changes Using PUT method",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var endpoint = '/contacts/' + contactID;\ncy.request({\n  method: 'PUT',\n  url: endpoint,\n  headers: {\n    'Authorization': 'Bearer ' + access_token\n  },\n  body: contactdetails.updateContactBody\n}).then(function (response) {\n  updateContactResponse = JSON.parse(JSON.stringify(response));\n  expect(updateContactResponse.status).to.eq(Cypress.env('validStatusCode'));\n  expect(updateContactResponse.body.firstName).to.not.eq(createNewContactResponse.body.firstName);\n  expect(updateContactResponse.body.lastName).to.not.eq(createNewContactResponse.body.lastName);\n  expect(updateContactResponse.body.birthdate).to.not.eq(createNewContactResponse.body.birthdate);\n});",
              "err": {},
              "uuid": "5c55f7ed-523c-4784-b1c1-53d550527c37",
              "parentUUID": "1ed7a56e-f0a6-48fe-934f-4a0e2ca52852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the created contact and verify the contact is deleted using DELETE method",
              "fullTitle": "Create a Contact and verify the Contact data Delete the created contact and verify the contact is deleted using DELETE method",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var endpoint = '/contacts/' + contactID;\ncy.request({\n  method: 'DELETE',\n  url: endpoint,\n  headers: {\n    'Authorization': 'Bearer ' + access_token\n  }\n}).then(function (response) {\n  ContactResponse = JSON.parse(JSON.stringify(response));\n  expect(ContactResponse.status).to.eq(Cypress.env('validStatusCode'));\n  expect(ContactResponse.body).to.eq(Cypress.env('deleteContactMessage'));\n});",
              "err": {},
              "uuid": "984c07bd-91e5-494f-80aa-ebd622d137da",
              "parentUUID": "1ed7a56e-f0a6-48fe-934f-4a0e2ca52852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Contact API returns error while fetching the deleted contact ",
              "fullTitle": "Create a Contact and verify the Contact data Get Contact API returns error while fetching the deleted contact ",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var endpoint = '/contacts/' + contactID;\ncy.request({\n  method: 'GET',\n  url: endpoint,\n  failOnStatusCode: false,\n  headers: {\n    'Authorization': 'Bearer ' + access_token\n  }\n}).then(function (response) {\n  ContactResponse = JSON.parse(JSON.stringify(response));\n  expect(ContactResponse.status).to.eq(Cypress.env('invalidStatusCode2'));\n});",
              "err": {},
              "uuid": "294c5189-7cf6-4fbd-b031-80527ab94ac9",
              "parentUUID": "1ed7a56e-f0a6-48fe-934f-4a0e2ca52852",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e84239f5-2978-4ba6-9ab2-90903b17f27b",
            "0aa44253-7487-4a32-a4f4-d0017ca15640",
            "5c55f7ed-523c-4784-b1c1-53d550527c37",
            "984c07bd-91e5-494f-80aa-ebd622d137da",
            "294c5189-7cf6-4fbd-b031-80527ab94ac9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}